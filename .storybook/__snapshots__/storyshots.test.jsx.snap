// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Components/Accordion Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div>
            <div
              class="sc-kMzDYw fJUYIx"
            >
              <div
                class="sc-jIBmdK kmpoUW"
              >
                <label
                  class="sc-jTQDnj jNCIEU"
                >
                  Accordion Label
                </label>
                <div
                  role="button"
                  tabindex="0"
                >
                  <div
                    class="sc-ilxdoh dUTOVZ"
                  />
                </div>
              </div>
              <div
                class="sc-hhyLtv gxJIYw"
                height="0px"
              >
                <div
                  class="sc-gYrpUN cUUMuY"
                >
                  <div>
                    <p>
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tincidunt, nisl eget aliquam tincidunt, nisl nisl aliquet nisl, nec
                    </p>
                  </div>
                </div>
              </div>
            </div>
            <div
              class="sc-kMzDYw fJUYIx"
            >
              <div
                class="sc-jIBmdK kmpoUW"
              >
                <label
                  class="sc-jTQDnj jNCIEU"
                >
                  Accordion Label
                </label>
                <div
                  role="button"
                  tabindex="0"
                >
                  <div
                    class="sc-ilxdoh dUTOVZ"
                  />
                </div>
              </div>
              <div
                class="sc-hhyLtv gxJIYw"
                height="0px"
              >
                <div
                  class="sc-gYrpUN cUUMuY"
                >
                  <div>
                    <p>
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tincidunt, nisl eget aliquam tincidunt, nisl nisl aliquet nisl, nec
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div>
          <div
            class="sc-kMzDYw fJUYIx"
          >
            <div
              class="sc-jIBmdK kmpoUW"
            >
              <label
                class="sc-jTQDnj jNCIEU"
              >
                Accordion Label
              </label>
              <div
                role="button"
                tabindex="0"
              >
                <div
                  class="sc-ilxdoh dUTOVZ"
                />
              </div>
            </div>
            <div
              class="sc-hhyLtv gxJIYw"
              height="0px"
            >
              <div
                class="sc-gYrpUN cUUMuY"
              >
                <div>
                  <p>
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tincidunt, nisl eget aliquam tincidunt, nisl nisl aliquet nisl, nec
                  </p>
                </div>
              </div>
            </div>
          </div>
          <div
            class="sc-kMzDYw fJUYIx"
          >
            <div
              class="sc-jIBmdK kmpoUW"
            >
              <label
                class="sc-jTQDnj jNCIEU"
              >
                Accordion Label
              </label>
              <div
                role="button"
                tabindex="0"
              >
                <div
                  class="sc-ilxdoh dUTOVZ"
                />
              </div>
            </div>
            <div
              class="sc-hhyLtv gxJIYw"
              height="0px"
            >
              <div
                class="sc-gYrpUN cUUMuY"
              >
                <div>
                  <p>
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tincidunt, nisl eget aliquam tincidunt, nisl nisl aliquet nisl, nec
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO kwEpEs"
            title="Cooper Darling-Blair"
          >
            <img
              alt="Cooper Darling-Blair"
              class="sc-cSxQHt bzKxNP"
              src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO kwEpEs"
          title="Cooper Darling-Blair"
        >
          <img
            alt="Cooper Darling-Blair"
            class="sc-cSxQHt bzKxNP"
            src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size 2 XL 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO gJJeHe"
            title="Cooper Darling-Blair"
          >
            <img
              alt="Cooper Darling-Blair"
              class="sc-cSxQHt bzKxNP"
              src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO gJJeHe"
          title="Cooper Darling-Blair"
        >
          <img
            alt="Cooper Darling-Blair"
            class="sc-cSxQHt bzKxNP"
            src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size 2 Xl No Img 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO gJJeHe"
            title="Cooper Darling-Blair"
          >
            CD
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO gJJeHe"
          title="Cooper Darling-Blair"
        >
          CD
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size 3 XL 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO gjBfId"
            title="Cooper Darling-Blair"
          >
            <img
              alt="Cooper Darling-Blair"
              class="sc-cSxQHt bzKxNP"
              src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO gjBfId"
          title="Cooper Darling-Blair"
        >
          <img
            alt="Cooper Darling-Blair"
            class="sc-cSxQHt bzKxNP"
            src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size 3 Xl No Img 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO gjBfId"
            title="Cooper Darling-Blair"
          >
            CD
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO gjBfId"
          title="Cooper Darling-Blair"
        >
          CD
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size 4 XL 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO jONviT"
            title="Cooper Darling-Blair"
          >
            <img
              alt="Cooper Darling-Blair"
              class="sc-cSxQHt bzKxNP"
              src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO jONviT"
          title="Cooper Darling-Blair"
        >
          <img
            alt="Cooper Darling-Blair"
            class="sc-cSxQHt bzKxNP"
            src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size 4 Xl No Img 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO jONviT"
            title="Cooper Darling-Blair"
          >
            CD
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO jONviT"
          title="Cooper Darling-Blair"
        >
          CD
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size LG 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO gaJSrK"
            title="Cooper Darling-Blair"
          >
            <img
              alt="Cooper Darling-Blair"
              class="sc-cSxQHt bzKxNP"
              src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO gaJSrK"
          title="Cooper Darling-Blair"
        >
          <img
            alt="Cooper Darling-Blair"
            class="sc-cSxQHt bzKxNP"
            src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size Lg No Img 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO gaJSrK"
            title="Cooper Darling-Blair"
          >
            CD
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO gaJSrK"
          title="Cooper Darling-Blair"
        >
          CD
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size MD 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO kwEpEs"
            title="Cooper Darling-Blair"
          >
            <img
              alt="Cooper Darling-Blair"
              class="sc-cSxQHt bzKxNP"
              src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO kwEpEs"
          title="Cooper Darling-Blair"
        >
          <img
            alt="Cooper Darling-Blair"
            class="sc-cSxQHt bzKxNP"
            src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size Md No Img 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO kwEpEs"
            title="Cooper Darling-Blair"
          >
            CD
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO kwEpEs"
          title="Cooper Darling-Blair"
        >
          CD
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size SM 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO dHXtYv"
            title="Cooper Darling-Blair"
          >
            <img
              alt="Cooper Darling-Blair"
              class="sc-cSxQHt bzKxNP"
              src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO dHXtYv"
          title="Cooper Darling-Blair"
        >
          <img
            alt="Cooper Darling-Blair"
            class="sc-cSxQHt bzKxNP"
            src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size Sm No Img 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO dHXtYv"
            title="Cooper Darling-Blair"
          >
            CD
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO dHXtYv"
          title="Cooper Darling-Blair"
        >
          CD
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size XL 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO hbbley"
            title="Cooper Darling-Blair"
          >
            <img
              alt="Cooper Darling-Blair"
              class="sc-cSxQHt bzKxNP"
              src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO hbbley"
          title="Cooper Darling-Blair"
        >
          <img
            alt="Cooper Darling-Blair"
            class="sc-cSxQHt bzKxNP"
            src="https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bbde01153dc9c5087edf407/ba6faad0-1d60-48c9-9bf4-b5be4fddfcaa/128"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Avatar Size Xl No Img 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-egTteO hbbley"
            title="Cooper Darling-Blair"
          >
            CD
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-egTteO hbbley"
          title="Cooper Darling-Blair"
        >
          CD
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Banner Error 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-dJGLCQ vomtl"
          >
            <div
              class="sc-hIPCAL dfdTsW"
            >
              <label
                class="sc-jTQDnj hXFWKz"
              >
                Title
              </label>
              <span
                class="sc-eDLJxc gEkcUd"
              >
                Description
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-dJGLCQ vomtl"
        >
          <div
            class="sc-hIPCAL dfdTsW"
          >
            <label
              class="sc-jTQDnj hXFWKz"
            >
              Title
            </label>
            <span
              class="sc-eDLJxc gEkcUd"
            >
              Description
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Banner Info 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-dJGLCQ hvUjGp"
          >
            <div
              class="sc-hIPCAL dfdTsW"
            >
              <label
                class="sc-jTQDnj hXFWKz"
              >
                Title
              </label>
              <span
                class="sc-eDLJxc gEkcUd"
              >
                Description
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-dJGLCQ hvUjGp"
        >
          <div
            class="sc-hIPCAL dfdTsW"
          >
            <label
              class="sc-jTQDnj hXFWKz"
            >
              Title
            </label>
            <span
              class="sc-eDLJxc gEkcUd"
            >
              Description
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Banner Success 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-dJGLCQ gIovdK"
          >
            <div
              class="sc-hIPCAL dfdTsW"
            >
              <label
                class="sc-jTQDnj hXFWKz"
              >
                Title
              </label>
              <span
                class="sc-eDLJxc gEkcUd"
              >
                Description
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-dJGLCQ gIovdK"
        >
          <div
            class="sc-hIPCAL dfdTsW"
          >
            <label
              class="sc-jTQDnj hXFWKz"
            >
              Title
            </label>
            <span
              class="sc-eDLJxc gEkcUd"
            >
              Description
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Banner Warning 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-dJGLCQ dotJzh"
          >
            <div
              class="sc-hIPCAL dfdTsW"
            >
              <label
                class="sc-jTQDnj hXFWKz"
              >
                Title
              </label>
              <span
                class="sc-eDLJxc gEkcUd"
              >
                Description
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-dJGLCQ dotJzh"
        >
          <div
            class="sc-hIPCAL dfdTsW"
          >
            <label
              class="sc-jTQDnj hXFWKz"
            >
              Title
            </label>
            <span
              class="sc-eDLJxc gEkcUd"
            >
              Description
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Card Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-hiTCYg bcIrJf"
          >
            <div>
              Hello!
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-hiTCYg bcIrJf"
        >
          <div>
            Hello!
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Card Focused 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-hiTCYg cgdsAs"
          >
            <div>
              Hello!
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-hiTCYg cgdsAs"
        >
          <div>
            Hello!
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Card Selected 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-hiTCYg fRrWfL"
          >
            <div>
              Hello!
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-hiTCYg fRrWfL"
        >
          <div>
            Hello!
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Checkbox Check Only 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <label
            class="sc-gHWROB bPMNyE"
          >
            <input
              class="sc-ejCLfv dsUabM"
              type="checkbox"
            />
            <div
              class="sc-ldgPui cXFDeQ"
            />
          </label>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <label
          class="sc-gHWROB bPMNyE"
        >
          <input
            class="sc-ejCLfv dsUabM"
            type="checkbox"
          />
          <div
            class="sc-ldgPui cXFDeQ"
          />
        </label>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Checkbox Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <label
            class="sc-gHWROB bPMNyE"
          >
            <input
              class="sc-ejCLfv dsUabM"
              type="checkbox"
            />
            <div
              class="sc-ldgPui cXFDeQ"
            />
            <label
              class="sc-jTQDnj hXFWKz"
            >
              Checkbox
            </label>
          </label>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <label
          class="sc-gHWROB bPMNyE"
        >
          <input
            class="sc-ejCLfv dsUabM"
            type="checkbox"
          />
          <div
            class="sc-ldgPui cXFDeQ"
          />
          <label
            class="sc-jTQDnj hXFWKz"
          >
            Checkbox
          </label>
        </label>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Checkbox Hover Style 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <label
            class="sc-gHWROB jfrPR"
          >
            <input
              class="sc-ejCLfv dsUabM"
              type="checkbox"
            />
            <div
              class="sc-ldgPui cXFDeQ"
            />
          </label>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <label
          class="sc-gHWROB jfrPR"
        >
          <input
            class="sc-ejCLfv dsUabM"
            type="checkbox"
          />
          <div
            class="sc-ldgPui cXFDeQ"
          />
        </label>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Checkbox Indeterminate 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <label
            class="sc-gHWROB bPMNyE"
          >
            <input
              class="sc-ejCLfv dsUabM"
              type="checkbox"
            />
            <div
              class="sc-ldgPui bKoXhA"
            >
              <svg
                aria-hidden="true"
                class="svg-inline--fa fa-dash fa-xs "
                data-icon="dash"
                data-prefix="fas"
                focusable="false"
                role="img"
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M0 256c0-17.7 14.3-32 32-32H480c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32z"
                  fill="currentColor"
                />
              </svg>
            </div>
          </label>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <label
          class="sc-gHWROB bPMNyE"
        >
          <input
            class="sc-ejCLfv dsUabM"
            type="checkbox"
          />
          <div
            class="sc-ldgPui bKoXhA"
          >
            <svg
              aria-hidden="true"
              class="svg-inline--fa fa-dash fa-xs "
              data-icon="dash"
              data-prefix="fas"
              focusable="false"
              role="img"
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M0 256c0-17.7 14.3-32 32-32H480c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32z"
                fill="currentColor"
              />
            </svg>
          </div>
        </label>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Chip Deletable 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-gjLKRp kpShyz"
            role="default"
          >
            <span
              class="sc-jTQDnj hXFWKz"
            >
              Australia
            </span>
            <svg
              aria-hidden="true"
              class="svg-inline--fa fa-circle-xmark sc-eAKupa eLstVJ"
              data-icon="circle-xmark"
              data-prefix="fas"
              focusable="false"
              role="img"
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512zM175 175c9.4-9.4 24.6-9.4 33.9 0l47 47 47-47c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-47 47 47 47c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-47-47-47 47c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l47-47-47-47c-9.4-9.4-9.4-24.6 0-33.9z"
                fill="currentColor"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-gjLKRp kpShyz"
          role="default"
        >
          <span
            class="sc-jTQDnj hXFWKz"
          >
            Australia
          </span>
          <svg
            aria-hidden="true"
            class="svg-inline--fa fa-circle-xmark sc-eAKupa eLstVJ"
            data-icon="circle-xmark"
            data-prefix="fas"
            focusable="false"
            role="img"
            viewBox="0 0 512 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512zM175 175c9.4-9.4 24.6-9.4 33.9 0l47 47 47-47c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-47 47 47 47c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-47-47-47 47c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l47-47-47-47c-9.4-9.4-9.4-24.6 0-33.9z"
              fill="currentColor"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Chip Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-gjLKRp kpShyz"
            role="default"
          >
            <span
              class="sc-jTQDnj hXFWKz"
            >
              Australia
            </span>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-gjLKRp kpShyz"
          role="default"
        >
          <span
            class="sc-jTQDnj hXFWKz"
          >
            Australia
          </span>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/ConfirmationModal Custom Background Icon 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <button>
            Open Modal
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <button>
          Open Modal
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/ConfirmationModal Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <button>
            Open Modal
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <button>
          Open Modal
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/DEPRECATED-Grid Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-iLXwop cWStWW"
          >
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt ggKJKm kLYxNN"
            >
              Span 2
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt ggKJKm kLYxNN"
            >
              Span 2
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt iMRbAv dRJVwA"
            >
              Span 3
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt lhIZGH kAiTdi"
              rowspan="2"
            >
              Span 4 x 2
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt lbwuBo kAiTdi"
            >
              Span 4
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt lbwuBo kAiTdi"
            >
              Span 4
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt iMRbAv dRJVwA"
            >
              Span 3
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
            <div
              class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
            >
              Span 1
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-iLXwop cWStWW"
        >
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt ggKJKm kLYxNN"
          >
            Span 2
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt ggKJKm kLYxNN"
          >
            Span 2
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt iMRbAv dRJVwA"
          >
            Span 3
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt lhIZGH kAiTdi"
            rowspan="2"
          >
            Span 4 x 2
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt lbwuBo kAiTdi"
          >
            Span 4
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt lbwuBo kAiTdi"
          >
            Span 4
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt iMRbAv dRJVwA"
          >
            Span 3
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
          <div
            class="sc-jgrbzj sc-YlsEt dtvumB jysStJ"
          >
            Span 1
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/DropdownController Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div>
            Test
          </div>
          <div
            style="width: 100%; z-index: 5; position: absolute; left: 0px; top: 0px;"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div>
          Test
        </div>
        <div
          style="width: 100%; z-index: 5; position: absolute; left: 0px; top: 0px;"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/GridBox All Gaps 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-guDLRT iJkiUJ"
          >
            <div
              class="sc-guDLRT bNFiCW"
            >
              Span 2 columns
            </div>
            <div
              class="sc-guDLRT fqiIZq"
            >
              Span 4 columns
            </div>
            <div
              class="sc-guDLRT bcwQYD"
            >
              Span 6 columns
            </div>
            <div
              class="sc-guDLRT jmVivb"
            >
              Span 2 rows
            </div>
            <div
              class="sc-guDLRT cTPUNG"
            >
              Span 3 rows
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-guDLRT iJkiUJ"
        >
          <div
            class="sc-guDLRT bNFiCW"
          >
            Span 2 columns
          </div>
          <div
            class="sc-guDLRT fqiIZq"
          >
            Span 4 columns
          </div>
          <div
            class="sc-guDLRT bcwQYD"
          >
            Span 6 columns
          </div>
          <div
            class="sc-guDLRT jmVivb"
          >
            Span 2 rows
          </div>
          <div
            class="sc-guDLRT cTPUNG"
          >
            Span 3 rows
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/GridBox Default 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-guDLRT nqXAl"
          >
            <div
              class="sc-guDLRT bNFiCW"
            >
              Span 2 columns
            </div>
            <div
              class="sc-guDLRT fqiIZq"
            >
              Span 4 columns
            </div>
            <div
              class="sc-guDLRT bcwQYD"
            >
              Span 6 columns
            </div>
            <div
              class="sc-guDLRT jmVivb"
            >
              Span 2 rows
            </div>
            <div
              class="sc-guDLRT cTPUNG"
            >
              Span 3 rows
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-guDLRT nqXAl"
        >
          <div
            class="sc-guDLRT bNFiCW"
          >
            Span 2 columns
          </div>
          <div
            class="sc-guDLRT fqiIZq"
          >
            Span 4 columns
          </div>
          <div
            class="sc-guDLRT bcwQYD"
          >
            Span 6 columns
          </div>
          <div
            class="sc-guDLRT jmVivb"
          >
            Span 2 rows
          </div>
          <div
            class="sc-guDLRT cTPUNG"
          >
            Span 3 rows
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/GridBox No Gaps 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-guDLRT SjwEV"
          >
            <div
              class="sc-guDLRT bNFiCW"
            >
              Span 2 columns
            </div>
            <div
              class="sc-guDLRT fqiIZq"
            >
              Span 4 columns
            </div>
            <div
              class="sc-guDLRT bcwQYD"
            >
              Span 6 columns
            </div>
            <div
              class="sc-guDLRT jmVivb"
            >
              Span 2 rows
            </div>
            <div
              class="sc-guDLRT cTPUNG"
            >
              Span 3 rows
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-guDLRT SjwEV"
        >
          <div
            class="sc-guDLRT bNFiCW"
          >
            Span 2 columns
          </div>
          <div
            class="sc-guDLRT fqiIZq"
          >
            Span 4 columns
          </div>
          <div
            class="sc-guDLRT bcwQYD"
          >
            Span 6 columns
          </div>
          <div
            class="sc-guDLRT jmVivb"
          >
            Span 2 rows
          </div>
          <div
            class="sc-guDLRT cTPUNG"
          >
            Span 3 rows
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Icon Font Awesome Search 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <svg
            aria-hidden="true"
            class="svg-inline--fa fa-magnifying-glass fa-lg "
            data-icon="magnifying-glass"
            data-prefix="fas"
            focusable="false"
            role="img"
            viewBox="0 0 512 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
              fill="currentColor"
            />
          </svg>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <svg
          aria-hidden="true"
          class="svg-inline--fa fa-magnifying-glass fa-lg "
          data-icon="magnifying-glass"
          data-prefix="fas"
          focusable="false"
          role="img"
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
            fill="currentColor"
          />
        </svg>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Icon Font Awesome Search 2 X 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <svg
            aria-hidden="true"
            class="svg-inline--fa fa-magnifying-glass fa-2x "
            data-icon="magnifying-glass"
            data-prefix="fas"
            focusable="false"
            role="img"
            viewBox="0 0 512 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
              fill="currentColor"
            />
          </svg>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <svg
          aria-hidden="true"
          class="svg-inline--fa fa-magnifying-glass fa-2x "
          data-icon="magnifying-glass"
          data-prefix="fas"
          focusable="false"
          role="img"
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
            fill="currentColor"
          />
        </svg>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Icon Font Awesome Search 3 X 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <svg
            aria-hidden="true"
            class="svg-inline--fa fa-magnifying-glass fa-3x "
            data-icon="magnifying-glass"
            data-prefix="fas"
            focusable="false"
            role="img"
            viewBox="0 0 512 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
              fill="currentColor"
            />
          </svg>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <svg
          aria-hidden="true"
          class="svg-inline--fa fa-magnifying-glass fa-3x "
          data-icon="magnifying-glass"
          data-prefix="fas"
          focusable="false"
          role="img"
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
            fill="currentColor"
          />
        </svg>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Icon Heart Svg 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <span
            class="sc-ktwOSD jefNaw"
          >
            <svg
              fill="currentColor"
              viewBox="0 0 1024 1024"
            >
              <path
                d="M923 283.6c-13.4-31.1-32.6-58.9-56.9-82.8-24.3-23.8-52.5-42.4-84-55.5-32.5-13.5-66.9-20.3-102.4-20.3-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5-24.4 23.9-43.5 51.7-56.9 82.8-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3 0.1-35.3-7-69.6-20.9-101.9z"
              />
            </svg>
          </span>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <span
          class="sc-ktwOSD jefNaw"
        >
          <svg
            fill="currentColor"
            viewBox="0 0 1024 1024"
          >
            <path
              d="M923 283.6c-13.4-31.1-32.6-58.9-56.9-82.8-24.3-23.8-52.5-42.4-84-55.5-32.5-13.5-66.9-20.3-102.4-20.3-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5-24.4 23.9-43.5 51.7-56.9 82.8-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3 0.1-35.3-7-69.6-20.9-101.9z"
            />
          </svg>
        </span>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Input Default 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-bqOZlv eAfdeB"
          >
            <label
              class="sc-jTQDnj hXFWKz"
            >
              Fancy label
            </label>
            <div
              class="sc-dEFURK Axkjz"
            >
              <input
                class="sc-gHjUZk czHmNc"
                placeholder="Default"
              />
            </div>
            <span
              class="sc-eDLJxc fFgmF"
              color="primary.neutral.400"
            >
              This is a hint
            </span>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-bqOZlv eAfdeB"
        >
          <label
            class="sc-jTQDnj hXFWKz"
          >
            Fancy label
          </label>
          <div
            class="sc-dEFURK Axkjz"
          >
            <input
              class="sc-gHjUZk czHmNc"
              placeholder="Default"
            />
          </div>
          <span
            class="sc-eDLJxc fFgmF"
            color="primary.neutral.400"
          >
            This is a hint
          </span>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Input Disabled 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-bqOZlv eAfdeB"
          >
            <div
              class="sc-dEFURK Axkjz"
            >
              <span
                class="sc-crHGWd bhbaLY"
                disabled=""
              >
                <svg
                  aria-hidden="true"
                  class="svg-inline--fa fa-magnifying-glass "
                  data-icon="magnifying-glass"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style="opacity: 0.4;"
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
                    fill="currentColor"
                  />
                </svg>
              </span>
              <input
                class="sc-gHjUZk buNHSU"
                disabled=""
                placeholder="Search"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-bqOZlv eAfdeB"
        >
          <div
            class="sc-dEFURK Axkjz"
          >
            <span
              class="sc-crHGWd bhbaLY"
              disabled=""
            >
              <svg
                aria-hidden="true"
                class="svg-inline--fa fa-magnifying-glass "
                data-icon="magnifying-glass"
                data-prefix="fas"
                focusable="false"
                role="img"
                style="opacity: 0.4;"
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
                  fill="currentColor"
                />
              </svg>
            </span>
            <input
              class="sc-gHjUZk buNHSU"
              disabled=""
              placeholder="Search"
            />
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Input Error 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-bqOZlv eAfdeB"
          >
            <div
              class="sc-dEFURK Axkjz"
            >
              <input
                class="sc-gHjUZk hBOHLE"
                placeholder="Search"
              />
            </div>
            <span
              class="sc-eDLJxc kOiGLf"
              color="secondary.red.500"
            >
              an error message
            </span>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-bqOZlv eAfdeB"
        >
          <div
            class="sc-dEFURK Axkjz"
          >
            <input
              class="sc-gHjUZk hBOHLE"
              placeholder="Search"
            />
          </div>
          <span
            class="sc-eDLJxc kOiGLf"
            color="secondary.red.500"
          >
            an error message
          </span>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Input Focused 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-bqOZlv eAfdeB"
          >
            <div
              class="sc-dEFURK Axkjz"
            >
              <span
                class="sc-crHGWd hKsCgY"
              >
                <svg
                  aria-hidden="true"
                  class="svg-inline--fa fa-magnifying-glass "
                  data-icon="magnifying-glass"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style="opacity: 0.4;"
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
                    fill="currentColor"
                  />
                </svg>
              </span>
              <input
                class="sc-gHjUZk buNHSU"
                placeholder="Search"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-bqOZlv eAfdeB"
        >
          <div
            class="sc-dEFURK Axkjz"
          >
            <span
              class="sc-crHGWd hKsCgY"
            >
              <svg
                aria-hidden="true"
                class="svg-inline--fa fa-magnifying-glass "
                data-icon="magnifying-glass"
                data-prefix="fas"
                focusable="false"
                role="img"
                style="opacity: 0.4;"
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
                  fill="currentColor"
                />
              </svg>
            </span>
            <input
              class="sc-gHjUZk buNHSU"
              placeholder="Search"
            />
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/IssueCard Admin Has Users Locked Silenced 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-jMbUWg iYOuuw"
            data-cy="issue-card-123123123"
          >
            <div
              class="sc-dQmhJc hSxAeV"
            >
              <div
                class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
                data-cy="issue-card-title"
              >
                My test issue
              </div>
              <div
                class="sc-hVcFhV dRbuFY"
              >
                <div
                  class="sc-gUjXxn eCZhQe"
                />
                <button
                  class="sc-iBdmCd csCRpD"
                  data-cy="issue-card-unmute"
                  shape="rect"
                />
                <button
                  class="sc-iBdmCd csCRpD"
                  data-cy="issue-card-actions"
                  shape="rect"
                />
              </div>
            </div>
            <span
              class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
              data-cy="issue-card-description"
            >
              This is an issue card.
            </span>
            <div
              class="sc-BCEsf jrEzxh"
            >
              <div
                class="sc-egTteO iDIrAj sc-kiTAOk ecYJol"
                data-cy="issue-card-avatar-123123"
                title="Bob Bob"
              >
                BB
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-jMbUWg iYOuuw"
          data-cy="issue-card-123123123"
        >
          <div
            class="sc-dQmhJc hSxAeV"
          >
            <div
              class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
              data-cy="issue-card-title"
            >
              My test issue
            </div>
            <div
              class="sc-hVcFhV dRbuFY"
            >
              <div
                class="sc-gUjXxn eCZhQe"
              />
              <button
                class="sc-iBdmCd csCRpD"
                data-cy="issue-card-unmute"
                shape="rect"
              />
              <button
                class="sc-iBdmCd csCRpD"
                data-cy="issue-card-actions"
                shape="rect"
              />
            </div>
          </div>
          <span
            class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
            data-cy="issue-card-description"
          >
            This is an issue card.
          </span>
          <div
            class="sc-BCEsf jrEzxh"
          >
            <div
              class="sc-egTteO iDIrAj sc-kiTAOk ecYJol"
              data-cy="issue-card-avatar-123123"
              title="Bob Bob"
            >
              BB
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/IssueCard Long Description 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-jMbUWg iYOuuw"
            data-cy="issue-card-123123123"
          >
            <div
              class="sc-dQmhJc hSxAeV"
            >
              <div
                class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
                data-cy="issue-card-title"
              >
                My test issue
              </div>
              <div
                class="sc-hVcFhV dRbuFY"
              >
                <div
                  class="sc-gUjXxn eCZhQe"
                />
              </div>
            </div>
            <span
              class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
              data-cy="issue-card-description"
            >
              
    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas arcu diam, imperdiet auctor ultrices eu, vulputate vitae nisl. Vestibulum at congue sapien. Sed faucibus mauris ante, in commodo purus lobortis et. Nunc volutpat turpis lacus, in pharetra massa ultricies vitae. Integer rhoncus libero eget vestibulum rhoncus. Quisque vehicula risus a gravida consectetur. Sed congue molestie mauris, vitae rutrum erat accumsan sit amet. Aliquam efficitur efficitur enim et aliquam. Proin sed auctor lectus. Integer et enim sit amet tortor hendrerit blandit et at est.

Quisque commodo leo placerat urna faucibus, eget rhoncus dolor consequat. Cras tortor tortor, pellentesque eget blandit non, ultrices in orci. Donec efficitur, sem a congue pharetra, enim purus venenatis purus, non porta risus arcu at ex. Etiam ullamcorper consequat tincidunt. Etiam semper vel mauris nec congue. Donec nec suscipit orci. Phasellus eget lectus erat. Vivamus turpis erat, malesuada vitae turpis ac, blandit auctor diam.

Maecenas porta aliquet posuere. Phasellus ullamcorper at sem non congue. Proin mattis eu risus at feugiat. Donec non felis diam. Nunc a tincidunt purus. Donec tempor id mauris a gravida. Aenean luctus convallis maximus. Donec tincidunt euismod enim, a egestas lacus scelerisque et. Nullam eu nunc arcu. Curabitur viverra odio ac fringilla pulvinar.


            </span>
            <div
              class="sc-BCEsf jrEzxh"
            />
            <label
              class="sc-jTQDnj kjfTS sc-jiaTdC kboPsd"
            >
              No members
            </label>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-jMbUWg iYOuuw"
          data-cy="issue-card-123123123"
        >
          <div
            class="sc-dQmhJc hSxAeV"
          >
            <div
              class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
              data-cy="issue-card-title"
            >
              My test issue
            </div>
            <div
              class="sc-hVcFhV dRbuFY"
            >
              <div
                class="sc-gUjXxn eCZhQe"
              />
            </div>
          </div>
          <span
            class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
            data-cy="issue-card-description"
          >
            
    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas arcu diam, imperdiet auctor ultrices eu, vulputate vitae nisl. Vestibulum at congue sapien. Sed faucibus mauris ante, in commodo purus lobortis et. Nunc volutpat turpis lacus, in pharetra massa ultricies vitae. Integer rhoncus libero eget vestibulum rhoncus. Quisque vehicula risus a gravida consectetur. Sed congue molestie mauris, vitae rutrum erat accumsan sit amet. Aliquam efficitur efficitur enim et aliquam. Proin sed auctor lectus. Integer et enim sit amet tortor hendrerit blandit et at est.

Quisque commodo leo placerat urna faucibus, eget rhoncus dolor consequat. Cras tortor tortor, pellentesque eget blandit non, ultrices in orci. Donec efficitur, sem a congue pharetra, enim purus venenatis purus, non porta risus arcu at ex. Etiam ullamcorper consequat tincidunt. Etiam semper vel mauris nec congue. Donec nec suscipit orci. Phasellus eget lectus erat. Vivamus turpis erat, malesuada vitae turpis ac, blandit auctor diam.

Maecenas porta aliquet posuere. Phasellus ullamcorper at sem non congue. Proin mattis eu risus at feugiat. Donec non felis diam. Nunc a tincidunt purus. Donec tempor id mauris a gravida. Aenean luctus convallis maximus. Donec tincidunt euismod enim, a egestas lacus scelerisque et. Nullam eu nunc arcu. Curabitur viverra odio ac fringilla pulvinar.


          </span>
          <div
            class="sc-BCEsf jrEzxh"
          />
          <label
            class="sc-jTQDnj kjfTS sc-jiaTdC kboPsd"
          >
            No members
          </label>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/IssueCard Long Description Truncated 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-jMbUWg iYOuuw"
            data-cy="issue-card-123123123"
          >
            <div
              class="sc-dQmhJc hSxAeV"
            >
              <div
                class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
                data-cy="issue-card-title"
              >
                My test issue
              </div>
              <div
                class="sc-hVcFhV dRbuFY"
              >
                <div
                  class="sc-gUjXxn eCZhQe"
                />
              </div>
            </div>
            <span
              class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
              data-cy="issue-card-description"
            >
              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas arcu diam, imperdiet auctor ultrices eu, vulputate vitae nisl. Vestib...
            </span>
            <div
              class="sc-BCEsf jrEzxh"
            />
            <label
              class="sc-jTQDnj kjfTS sc-jiaTdC kboPsd"
            >
              No members
            </label>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-jMbUWg iYOuuw"
          data-cy="issue-card-123123123"
        >
          <div
            class="sc-dQmhJc hSxAeV"
          >
            <div
              class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
              data-cy="issue-card-title"
            >
              My test issue
            </div>
            <div
              class="sc-hVcFhV dRbuFY"
            >
              <div
                class="sc-gUjXxn eCZhQe"
              />
            </div>
          </div>
          <span
            class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
            data-cy="issue-card-description"
          >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas arcu diam, imperdiet auctor ultrices eu, vulputate vitae nisl. Vestib...
          </span>
          <div
            class="sc-BCEsf jrEzxh"
          />
          <label
            class="sc-jTQDnj kjfTS sc-jiaTdC kboPsd"
          >
            No members
          </label>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/IssueCard Lots Of Members 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-jMbUWg iYOuuw"
            data-cy="issue-card-123123123"
          >
            <div
              class="sc-dQmhJc hSxAeV"
            >
              <div
                class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
                data-cy="issue-card-title"
              >
                My test issue
              </div>
              <div
                class="sc-hVcFhV dRbuFY"
              >
                <div
                  class="sc-gUjXxn eCZhQe"
                />
                <button
                  class="sc-iBdmCd csCRpD"
                  data-cy="issue-card-unmute"
                  shape="rect"
                />
                <button
                  class="sc-iBdmCd csCRpD"
                  data-cy="issue-card-actions"
                  shape="rect"
                />
              </div>
            </div>
            <span
              class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
              data-cy="issue-card-description"
            >
              This is an issue card.
            </span>
            <div
              class="sc-BCEsf jrEzxh"
            >
              <div
                class="sc-egTteO clIOE sc-kiTAOk ecYJol"
                data-cy="issue-card-avatar-123123"
                title="Jenny Jenny"
              >
                JJ
              </div>
              <div
                class="sc-egTteO iDIrAj sc-kiTAOk ecYJol"
                data-cy="issue-card-avatar-536735"
                title="Bob Bob"
              >
                BB
              </div>
              <div
                class="sc-egTteO laNlax sc-kiTAOk ecYJol"
                data-cy="issue-card-avatar-184865"
                title="Lara Lara"
              >
                LL
              </div>
              <div
                class="sc-egTteO brYhwt sc-kiTAOk ecYJol"
                data-cy="issue-card-avatar-567389"
                title="Fred Fred"
              >
                FF
              </div>
              <div
                class="sc-egTteO cUmxBy sc-kiTAOk sc-kZOrUE ecYJol ehjvfI"
                title="+ 3"
              >
                +3
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-jMbUWg iYOuuw"
          data-cy="issue-card-123123123"
        >
          <div
            class="sc-dQmhJc hSxAeV"
          >
            <div
              class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
              data-cy="issue-card-title"
            >
              My test issue
            </div>
            <div
              class="sc-hVcFhV dRbuFY"
            >
              <div
                class="sc-gUjXxn eCZhQe"
              />
              <button
                class="sc-iBdmCd csCRpD"
                data-cy="issue-card-unmute"
                shape="rect"
              />
              <button
                class="sc-iBdmCd csCRpD"
                data-cy="issue-card-actions"
                shape="rect"
              />
            </div>
          </div>
          <span
            class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
            data-cy="issue-card-description"
          >
            This is an issue card.
          </span>
          <div
            class="sc-BCEsf jrEzxh"
          >
            <div
              class="sc-egTteO clIOE sc-kiTAOk ecYJol"
              data-cy="issue-card-avatar-123123"
              title="Jenny Jenny"
            >
              JJ
            </div>
            <div
              class="sc-egTteO iDIrAj sc-kiTAOk ecYJol"
              data-cy="issue-card-avatar-536735"
              title="Bob Bob"
            >
              BB
            </div>
            <div
              class="sc-egTteO laNlax sc-kiTAOk ecYJol"
              data-cy="issue-card-avatar-184865"
              title="Lara Lara"
            >
              LL
            </div>
            <div
              class="sc-egTteO brYhwt sc-kiTAOk ecYJol"
              data-cy="issue-card-avatar-567389"
              title="Fred Fred"
            >
              FF
            </div>
            <div
              class="sc-egTteO cUmxBy sc-kiTAOk sc-kZOrUE ecYJol ehjvfI"
              title="+ 3"
            >
              +3
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/IssueCard No Users 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-jMbUWg iYOuuw"
            data-cy="issue-card-123123123"
          >
            <div
              class="sc-dQmhJc hSxAeV"
            >
              <div
                class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
                data-cy="issue-card-title"
              >
                My test issue
              </div>
              <div
                class="sc-hVcFhV dRbuFY"
              >
                <div
                  class="sc-gUjXxn eCZhQe"
                />
              </div>
            </div>
            <span
              class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
              data-cy="issue-card-description"
            >
              This is an issue card.
            </span>
            <div
              class="sc-BCEsf jrEzxh"
            />
            <label
              class="sc-jTQDnj kjfTS sc-jiaTdC kboPsd"
            >
              No members
            </label>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-jMbUWg iYOuuw"
          data-cy="issue-card-123123123"
        >
          <div
            class="sc-dQmhJc hSxAeV"
          >
            <div
              class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
              data-cy="issue-card-title"
            >
              My test issue
            </div>
            <div
              class="sc-hVcFhV dRbuFY"
            >
              <div
                class="sc-gUjXxn eCZhQe"
              />
            </div>
          </div>
          <span
            class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
            data-cy="issue-card-description"
          >
            This is an issue card.
          </span>
          <div
            class="sc-BCEsf jrEzxh"
          />
          <label
            class="sc-jTQDnj kjfTS sc-jiaTdC kboPsd"
          >
            No members
          </label>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/IssueCard Non Member Has Users Locked 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-jMbUWg iYOuuw"
            data-cy="issue-card-123123123"
          >
            <div
              class="sc-dQmhJc hSxAeV"
            >
              <div
                class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
                data-cy="issue-card-title"
              >
                My test issue
              </div>
              <div
                class="sc-hVcFhV dRbuFY"
              >
                <div
                  class="sc-gUjXxn eCZhQe"
                />
              </div>
            </div>
            <span
              class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
              data-cy="issue-card-description"
            >
              This is an issue card.
            </span>
            <div
              class="sc-BCEsf jrEzxh"
            >
              <div
                class="sc-egTteO iDIrAj sc-kiTAOk ecYJol"
                data-cy="issue-card-avatar-123123"
                title="Bob Bob"
              >
                BB
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-jMbUWg iYOuuw"
          data-cy="issue-card-123123123"
        >
          <div
            class="sc-dQmhJc hSxAeV"
          >
            <div
              class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
              data-cy="issue-card-title"
            >
              My test issue
            </div>
            <div
              class="sc-hVcFhV dRbuFY"
            >
              <div
                class="sc-gUjXxn eCZhQe"
              />
            </div>
          </div>
          <span
            class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
            data-cy="issue-card-description"
          >
            This is an issue card.
          </span>
          <div
            class="sc-BCEsf jrEzxh"
          >
            <div
              class="sc-egTteO iDIrAj sc-kiTAOk ecYJol"
              data-cy="issue-card-avatar-123123"
              title="Bob Bob"
            >
              BB
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/IssueCard Wrapped In Link 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <a
            href=""
          >
            <div
              class="sc-jMbUWg iYOuuw"
              data-cy="issue-card-123123123"
            >
              <div
                class="sc-dQmhJc hSxAeV"
              >
                <div
                  class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
                  data-cy="issue-card-title"
                >
                  My test issue
                </div>
                <div
                  class="sc-hVcFhV dRbuFY"
                >
                  <div
                    class="sc-gUjXxn eCZhQe"
                  />
                </div>
              </div>
              <span
                class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
                data-cy="issue-card-description"
              >
                This is an issue card.
              </span>
              <div
                class="sc-BCEsf jrEzxh"
              />
              <label
                class="sc-jTQDnj kjfTS sc-jiaTdC kboPsd"
              >
                No members
              </label>
            </div>
          </a>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <a
          href=""
        >
          <div
            class="sc-jMbUWg iYOuuw"
            data-cy="issue-card-123123123"
          >
            <div
              class="sc-dQmhJc hSxAeV"
            >
              <div
                class="sc-dmyDGi ledpgj sc-bCvmcN iUbBZA"
                data-cy="issue-card-title"
              >
                My test issue
              </div>
              <div
                class="sc-hVcFhV dRbuFY"
              >
                <div
                  class="sc-gUjXxn eCZhQe"
                />
              </div>
            </div>
            <span
              class="sc-eDLJxc OHOZw sc-cPtzYu dmGoiR"
              data-cy="issue-card-description"
            >
              This is an issue card.
            </span>
            <div
              class="sc-BCEsf jrEzxh"
            />
            <label
              class="sc-jTQDnj kjfTS sc-jiaTdC kboPsd"
            >
              No members
            </label>
          </div>
        </a>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/List Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-etsZsV dIJbCi"
          >
            <div
              class="sc-fGrnoC ebvKwC"
            >
              <div
                class="sc-dsArIn hpLaWm"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  Item!
                </span>
              </div>
            </div>
            <div
              class="sc-fGrnoC ebvKwC"
            >
              <div
                class="sc-dsArIn hpLaWm"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  Item!
                </span>
              </div>
            </div>
            <div
              class="sc-fGrnoC ebvKwC"
            >
              <div
                class="sc-dsArIn hpLaWm"
              >
                <div
                  class="sc-dmyDGi loNOUM"
                >
                  Header!
                </div>
              </div>
            </div>
            <div
              class="sc-fGrnoC ebvKwC"
            >
              <div
                class="sc-dsArIn hpLaWm"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  Item!
                </span>
              </div>
            </div>
            <div
              class="sc-fGrnoC ebvKwC"
            >
              <div
                class="sc-dsArIn hpLaWm"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  Item!
                </span>
              </div>
            </div>
            <div
              class="sc-fGrnoC ebvKwC"
            >
              <div
                class="sc-dsArIn hpLaWm"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  Item!
                </span>
              </div>
            </div>
            <div
              class="sc-fGrnoC ebvKwC"
            >
              <div
                class="sc-dsArIn hpLaWm"
              >
                <span
                  class="sc-eDLJxc gEkcUd"
                >
                  Sub Header!
                </span>
              </div>
            </div>
            <div
              class="sc-fGrnoC ebvKwC"
            >
              <div
                class="sc-dsArIn hpLaWm"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  Item!
                </span>
              </div>
            </div>
            <div
              class="sc-fGrnoC ebvKwC"
            >
              <div
                class="sc-dsArIn hpLaWm"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  Item!
                </span>
              </div>
            </div>
            <div
              class="sc-fGrnoC ebvKwC"
            >
              <div
                class="sc-dsArIn hpLaWm"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  Item!
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-etsZsV dIJbCi"
        >
          <div
            class="sc-fGrnoC ebvKwC"
          >
            <div
              class="sc-dsArIn hpLaWm"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                Item!
              </span>
            </div>
          </div>
          <div
            class="sc-fGrnoC ebvKwC"
          >
            <div
              class="sc-dsArIn hpLaWm"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                Item!
              </span>
            </div>
          </div>
          <div
            class="sc-fGrnoC ebvKwC"
          >
            <div
              class="sc-dsArIn hpLaWm"
            >
              <div
                class="sc-dmyDGi loNOUM"
              >
                Header!
              </div>
            </div>
          </div>
          <div
            class="sc-fGrnoC ebvKwC"
          >
            <div
              class="sc-dsArIn hpLaWm"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                Item!
              </span>
            </div>
          </div>
          <div
            class="sc-fGrnoC ebvKwC"
          >
            <div
              class="sc-dsArIn hpLaWm"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                Item!
              </span>
            </div>
          </div>
          <div
            class="sc-fGrnoC ebvKwC"
          >
            <div
              class="sc-dsArIn hpLaWm"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                Item!
              </span>
            </div>
          </div>
          <div
            class="sc-fGrnoC ebvKwC"
          >
            <div
              class="sc-dsArIn hpLaWm"
            >
              <span
                class="sc-eDLJxc gEkcUd"
              >
                Sub Header!
              </span>
            </div>
          </div>
          <div
            class="sc-fGrnoC ebvKwC"
          >
            <div
              class="sc-dsArIn hpLaWm"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                Item!
              </span>
            </div>
          </div>
          <div
            class="sc-fGrnoC ebvKwC"
          >
            <div
              class="sc-dsArIn hpLaWm"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                Item!
              </span>
            </div>
          </div>
          <div
            class="sc-fGrnoC ebvKwC"
          >
            <div
              class="sc-dsArIn hpLaWm"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                Item!
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Menu Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div>
            <button
              class="sc-iBdmCd dkzvOQ"
              shape="rect"
            >
              <span
                class="sc-jTQDnj kjfTS"
              >
                Toggle menu
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div>
          <button
            class="sc-iBdmCd dkzvOQ"
            shape="rect"
          >
            <span
              class="sc-jTQDnj kjfTS"
            >
              Toggle menu
            </span>
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Menu Headings 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div>
            <button
              class="sc-iBdmCd dkzvOQ"
              shape="rect"
            >
              <span
                class="sc-jTQDnj kjfTS"
              >
                Toggle menu
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div>
          <button
            class="sc-iBdmCd dkzvOQ"
            shape="rect"
          >
            <span
              class="sc-jTQDnj kjfTS"
            >
              Toggle menu
            </span>
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/MenuList Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-faxClP fIVBVg"
            style="max-width: 200px;"
          >
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny gswVwc"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Button
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny gswVwc"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Button
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-faxClP fIVBVg"
          style="max-width: 200px;"
        >
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny gswVwc"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Button
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny gswVwc"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Button
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/MenuList Fixed Height 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-faxClP fIVBVg"
            style="height: 200px; max-width: 200px;"
          >
            <div
              class="sc-EFXbG dywyLU"
            >
              Not Sticky Heading
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-EFXbG fJXpKw"
            >
              Sticky Heading
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
            <div
              class="sc-fYlTny bPSMqW"
            >
              <div
                class="sc-dxjsDj eXDfza"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  MenuList Item
                </span>
              </div>
              <div
                class="sc-UFtxY"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-faxClP fIVBVg"
          style="height: 200px; max-width: 200px;"
        >
          <div
            class="sc-EFXbG dywyLU"
          >
            Not Sticky Heading
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-EFXbG fJXpKw"
          >
            Sticky Heading
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
          <div
            class="sc-fYlTny bPSMqW"
          >
            <div
              class="sc-dxjsDj eXDfza"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                MenuList Item
              </span>
            </div>
            <div
              class="sc-UFtxY"
            />
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Modal Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div>
            <button
              class="sc-iBdmCd dkzvOQ"
              shape="rect"
            >
              <span
                class="sc-jTQDnj kjfTS"
              >
                Open modal
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div>
          <button
            class="sc-iBdmCd dkzvOQ"
            shape="rect"
          >
            <span
              class="sc-jTQDnj kjfTS"
            >
              Open modal
            </span>
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/PageHeader Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-eKzwpa eZrhEf"
          >
            <div
              class="sc-hABAzo etGLpC"
            >
              <svg
                aria-hidden="true"
                class="svg-inline--fa fa-grid-2 fa-2x "
                data-icon="grid-2"
                data-prefix="fas"
                focusable="false"
                role="img"
                viewBox="0 0 448 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M192 80c0-26.5-21.5-48-48-48H48C21.5 32 0 53.5 0 80v96c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48V80zm0 256c0-26.5-21.5-48-48-48H48c-26.5 0-48 21.5-48 48v96c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48V336zM256 80v96c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48H304c-26.5 0-48 21.5-48 48zM448 336c0-26.5-21.5-48-48-48H304c-26.5 0-48 21.5-48 48v96c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48V336z"
                  fill="currentColor"
                />
              </svg>
            </div>
            <div
              class="sc-dmyDGi bfiTDG sc-ppyJt coDgtk"
            >
              Dashboard
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-eKzwpa eZrhEf"
        >
          <div
            class="sc-hABAzo etGLpC"
          >
            <svg
              aria-hidden="true"
              class="svg-inline--fa fa-grid-2 fa-2x "
              data-icon="grid-2"
              data-prefix="fas"
              focusable="false"
              role="img"
              viewBox="0 0 448 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M192 80c0-26.5-21.5-48-48-48H48C21.5 32 0 53.5 0 80v96c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48V80zm0 256c0-26.5-21.5-48-48-48H48c-26.5 0-48 21.5-48 48v96c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48V336zM256 80v96c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48H304c-26.5 0-48 21.5-48 48zM448 336c0-26.5-21.5-48-48-48H304c-26.5 0-48 21.5-48 48v96c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48V336z"
                fill="currentColor"
              />
            </svg>
          </div>
          <div
            class="sc-dmyDGi bfiTDG sc-ppyJt coDgtk"
          >
            Dashboard
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Pagination Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-bbxCTK hFmIUN"
          >
            <div>
              <span
                class="sc-eDLJxc fNXNMv"
              >
                Page 
                1
                 of 
                20
              </span>
              <button
                class="sc-iBdmCd esrowU"
                disabled=""
                shape="rect"
              >
                <span
                  class="sc-jTQDnj kjfTS"
                >
                  <svg
                    aria-hidden="true"
                    class="svg-inline--fa fa-chevron-left "
                    data-icon="chevron-left"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    viewBox="0 0 320 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l192 192c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256 246.6 86.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192z"
                      fill="currentColor"
                    />
                  </svg>
                </span>
              </button>
              <button
                class="sc-iBdmCd esrowU"
                shape="rect"
              >
                <span
                  class="sc-jTQDnj kjfTS"
                >
                  <svg
                    aria-hidden="true"
                    class="svg-inline--fa fa-chevron-right "
                    data-icon="chevron-right"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    viewBox="0 0 320 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z"
                      fill="currentColor"
                    />
                  </svg>
                </span>
              </button>
            </div>
            <div>
              <span
                class="sc-eDLJxc fNXNMv"
              >
                Showing
              </span>
              <button
                class="sc-iBdmCd esrowU"
                shape="rect"
              >
                <span
                  class="sc-jTQDnj kjfTS"
                >
                  <span
                    class="sc-eDLJxc fNXNMv"
                  >
                    10
                  </span>
                </span>
                <span
                  class="sc-gLLvby gLWUlA"
                >
                  <svg
                    aria-hidden="true"
                    class="svg-inline--fa fa-caret-down "
                    data-icon="caret-down"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    viewBox="0 0 320 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z"
                      fill="currentColor"
                    />
                  </svg>
                </span>
              </button>
              <span
                class="sc-eDLJxc fNXNMv"
              >
                Items out of 
                200
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-bbxCTK hFmIUN"
        >
          <div>
            <span
              class="sc-eDLJxc fNXNMv"
            >
              Page 
              1
               of 
              20
            </span>
            <button
              class="sc-iBdmCd esrowU"
              disabled=""
              shape="rect"
            >
              <span
                class="sc-jTQDnj kjfTS"
              >
                <svg
                  aria-hidden="true"
                  class="svg-inline--fa fa-chevron-left "
                  data-icon="chevron-left"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l192 192c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256 246.6 86.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192z"
                    fill="currentColor"
                  />
                </svg>
              </span>
            </button>
            <button
              class="sc-iBdmCd esrowU"
              shape="rect"
            >
              <span
                class="sc-jTQDnj kjfTS"
              >
                <svg
                  aria-hidden="true"
                  class="svg-inline--fa fa-chevron-right "
                  data-icon="chevron-right"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z"
                    fill="currentColor"
                  />
                </svg>
              </span>
            </button>
          </div>
          <div>
            <span
              class="sc-eDLJxc fNXNMv"
            >
              Showing
            </span>
            <button
              class="sc-iBdmCd esrowU"
              shape="rect"
            >
              <span
                class="sc-jTQDnj kjfTS"
              >
                <span
                  class="sc-eDLJxc fNXNMv"
                >
                  10
                </span>
              </span>
              <span
                class="sc-gLLvby gLWUlA"
              >
                <svg
                  aria-hidden="true"
                  class="svg-inline--fa fa-caret-down "
                  data-icon="caret-down"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z"
                    fill="currentColor"
                  />
                </svg>
              </span>
            </button>
            <span
              class="sc-eDLJxc fNXNMv"
            >
              Items out of 
              200
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/PopIn Bottom 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-guDLRT hTdDkw"
          >
            <button>
              Toggle show (currently; 
              true
              )
            </button>
          </div>
        </div>
      </div>
    </div>
    <div
      id="portal-container"
    >
      <div
        class="sc-beySbM fLxCXd"
        offset="spacing.md"
      >
        <div
          class="sc-guDLRT fhZFEM"
        >
          Example
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-guDLRT hTdDkw"
        >
          <button>
            Toggle show (currently; 
            true
            )
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/PopIn Top 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-guDLRT hTdDkw"
          >
            <button>
              Toggle show (currently; 
              true
              )
            </button>
          </div>
        </div>
      </div>
    </div>
    <div
      id="portal-container"
    >
      <div
        class="sc-beySbM dMjZDQ"
        offset="spacing.md"
      >
        <div
          class="sc-guDLRT fhZFEM"
        >
          Example
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-guDLRT hTdDkw"
        >
          <button>
            Toggle show (currently; 
            true
            )
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Radio Card 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <label
            class="sc-khjJjR eHvtbQ"
          >
            <div
              class="sc-fLsdZI boMGmm"
            >
              <span
                class="sc-bBkKQz kBtfet"
              >
                <span
                  class="sc-jTQDnj jNCIEU"
                >
                  Label
                </span>
                <span
                  class="sc-eDLJxc fFgmF"
                  color="primary.neutral.400"
                >
                  Description
                </span>
              </span>
              <input
                checked=""
                class="sc-dmXXqC ijkfJT"
                type="radio"
              />
            </div>
          </label>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <label
          class="sc-khjJjR eHvtbQ"
        >
          <div
            class="sc-fLsdZI boMGmm"
          >
            <span
              class="sc-bBkKQz kBtfet"
            >
              <span
                class="sc-jTQDnj jNCIEU"
              >
                Label
              </span>
              <span
                class="sc-eDLJxc fFgmF"
                color="primary.neutral.400"
              >
                Description
              </span>
            </span>
            <input
              checked=""
              class="sc-dmXXqC ijkfJT"
              type="radio"
            />
          </div>
        </label>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Radio Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <label
            class="sc-khjJjR kJOOfJ"
          >
            <div
              class="sc-fLsdZI flpGiI"
            >
              <span
                class="sc-bBkKQz kBtfet"
              >
                <span
                  class="sc-jTQDnj jNCIEU"
                >
                  Radio
                </span>
                <span
                  class="sc-eDLJxc fFgmF"
                  color="primary.neutral.400"
                >
                  Description
                </span>
              </span>
              <input
                class="sc-dmXXqC ijkfJT"
                type="radio"
              />
            </div>
          </label>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <label
          class="sc-khjJjR kJOOfJ"
        >
          <div
            class="sc-fLsdZI flpGiI"
          >
            <span
              class="sc-bBkKQz kBtfet"
            >
              <span
                class="sc-jTQDnj jNCIEU"
              >
                Radio
              </span>
              <span
                class="sc-eDLJxc fFgmF"
                color="primary.neutral.400"
              >
                Description
              </span>
            </span>
            <input
              class="sc-dmXXqC ijkfJT"
              type="radio"
            />
          </div>
        </label>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Radio Icon Radio 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <label
            class="sc-khjJjR eHvtbQ"
          >
            <div
              class="sc-fLsdZI jeplsU"
            >
              <span
                class="sc-gLLvby gLWUlA"
              >
                <svg
                  aria-hidden="true"
                  class="svg-inline--fa fa-book "
                  data-icon="book"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  viewBox="0 0 448 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"
                    fill="currentColor"
                  />
                </svg>
              </span>
              <span
                class="sc-bBkKQz kBtfet"
              >
                <span
                  class="sc-jTQDnj jNCIEU"
                >
                  Label
                </span>
                <span
                  class="sc-eDLJxc fFgmF"
                  color="primary.neutral.400"
                >
                  Description
                </span>
              </span>
              <input
                class="sc-dmXXqC ijkfJT"
                type="radio"
              />
            </div>
          </label>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <label
          class="sc-khjJjR eHvtbQ"
        >
          <div
            class="sc-fLsdZI jeplsU"
          >
            <span
              class="sc-gLLvby gLWUlA"
            >
              <svg
                aria-hidden="true"
                class="svg-inline--fa fa-book "
                data-icon="book"
                data-prefix="fas"
                focusable="false"
                role="img"
                viewBox="0 0 448 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"
                  fill="currentColor"
                />
              </svg>
            </span>
            <span
              class="sc-bBkKQz kBtfet"
            >
              <span
                class="sc-jTQDnj jNCIEU"
              >
                Label
              </span>
              <span
                class="sc-eDLJxc fFgmF"
                color="primary.neutral.400"
              >
                Description
              </span>
            </span>
            <input
              class="sc-dmXXqC ijkfJT"
              type="radio"
            />
          </div>
        </label>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Radio List 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <label
            class="sc-khjJjR kJOOfJ"
          >
            <div
              class="sc-fLsdZI cAreQe"
            >
              <span
                class="sc-bBkKQz kBtfet"
              >
                <span
                  class="sc-jTQDnj jNCIEU"
                >
                  Label
                </span>
                <span
                  class="sc-eDLJxc fFgmF"
                  color="primary.neutral.400"
                >
                  Description
                </span>
              </span>
              <input
                class="sc-dmXXqC ijkfJT"
                type="radio"
              />
            </div>
          </label>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <label
          class="sc-khjJjR kJOOfJ"
        >
          <div
            class="sc-fLsdZI cAreQe"
          >
            <span
              class="sc-bBkKQz kBtfet"
            >
              <span
                class="sc-jTQDnj jNCIEU"
              >
                Label
              </span>
              <span
                class="sc-eDLJxc fFgmF"
                color="primary.neutral.400"
              >
                Description
              </span>
            </span>
            <input
              class="sc-dmXXqC ijkfJT"
              type="radio"
            />
          </div>
        </label>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Radio Plain 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <label
            class="sc-khjJjR kJOOfJ"
          >
            <div
              class="sc-fLsdZI cAreQe"
            >
              <span
                class="sc-bBkKQz kBtfet"
              >
                <span
                  class="sc-jTQDnj jNCIEU"
                >
                  Label
                </span>
                <span
                  class="sc-eDLJxc fFgmF"
                  color="primary.neutral.400"
                >
                  Description
                </span>
              </span>
              <input
                class="sc-dmXXqC ijkfJT"
                type="radio"
              />
            </div>
          </label>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <label
          class="sc-khjJjR kJOOfJ"
        >
          <div
            class="sc-fLsdZI cAreQe"
          >
            <span
              class="sc-bBkKQz kBtfet"
            >
              <span
                class="sc-jTQDnj jNCIEU"
              >
                Label
              </span>
              <span
                class="sc-eDLJxc fFgmF"
                color="primary.neutral.400"
              >
                Description
              </span>
            </span>
            <input
              class="sc-dmXXqC ijkfJT"
              type="radio"
            />
          </div>
        </label>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Select Error 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            style="max-width: 300px;"
          >
            <div
              class="sc-lnskGP geAHTN"
            >
              <button
                class="sc-iuOPfm hxOgev"
              >
                Select
                <div
                  class="sc-iKOlBE bHGJYC"
                >
                  <div
                    class="sc-gjLKRp goEhMg"
                    role="error"
                  >
                    <span
                      class="sc-jTQDnj hXFWKz"
                    >
                      All
                    </span>
                  </div>
                </div>
              </button>
              <div
                style="width: 100%; z-index: 5; position: absolute; left: 0px; top: 0px;"
              />
              <span
                class="sc-eDLJxc kOiGLf"
                color="secondary.red.500"
              >
                Error message
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          style="max-width: 300px;"
        >
          <div
            class="sc-lnskGP geAHTN"
          >
            <button
              class="sc-iuOPfm hxOgev"
            >
              Select
              <div
                class="sc-iKOlBE bHGJYC"
              >
                <div
                  class="sc-gjLKRp goEhMg"
                  role="error"
                >
                  <span
                    class="sc-jTQDnj hXFWKz"
                  >
                    All
                  </span>
                </div>
              </div>
            </button>
            <div
              style="width: 100%; z-index: 5; position: absolute; left: 0px; top: 0px;"
            />
            <span
              class="sc-eDLJxc kOiGLf"
              color="secondary.red.500"
            >
              Error message
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Select Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            style="max-width: 300px;"
          >
            <div
              class="sc-lnskGP geAHTN"
            >
              <button
                class="sc-iuOPfm gJjKwb"
              >
                Select
                <div
                  class="sc-iKOlBE bHGJYC"
                >
                  <div
                    class="sc-gjLKRp gMEAuc"
                    role="primary"
                  >
                    <span
                      class="sc-jTQDnj hXFWKz"
                    >
                      All
                    </span>
                  </div>
                </div>
              </button>
              <div
                style="width: 100%; z-index: 5; position: absolute; left: 0px; top: 0px;"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          style="max-width: 300px;"
        >
          <div
            class="sc-lnskGP geAHTN"
          >
            <button
              class="sc-iuOPfm gJjKwb"
            >
              Select
              <div
                class="sc-iKOlBE bHGJYC"
              >
                <div
                  class="sc-gjLKRp gMEAuc"
                  role="primary"
                >
                  <span
                    class="sc-jTQDnj hXFWKz"
                  >
                    All
                  </span>
                </div>
              </div>
            </button>
            <div
              style="width: 100%; z-index: 5; position: absolute; left: 0px; top: 0px;"
            />
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Select Long List 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            style="max-width: 300px;"
          >
            <div
              class="sc-lnskGP geAHTN"
            >
              <button
                class="sc-iuOPfm gJjKwb"
              >
                Log list
                <div
                  class="sc-iKOlBE bHGJYC"
                >
                  <div
                    class="sc-gjLKRp gMEAuc"
                    role="primary"
                  >
                    <span
                      class="sc-jTQDnj hXFWKz"
                    >
                      All
                    </span>
                  </div>
                </div>
              </button>
              <div
                style="width: 100%; z-index: 5; position: absolute; left: 0px; top: 0px;"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          style="max-width: 300px;"
        >
          <div
            class="sc-lnskGP geAHTN"
          >
            <button
              class="sc-iuOPfm gJjKwb"
            >
              Log list
              <div
                class="sc-iKOlBE bHGJYC"
              >
                <div
                  class="sc-gjLKRp gMEAuc"
                  role="primary"
                >
                  <span
                    class="sc-jTQDnj hXFWKz"
                  >
                    All
                  </span>
                </div>
              </div>
            </button>
            <div
              style="width: 100%; z-index: 5; position: absolute; left: 0px; top: 0px;"
            />
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Snackbar Base 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-guDLRT hQNVfw"
          >
            <div
              class="sc-guDLRT bmroYu"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                An action was triggered
              </span>
            </div>
            <div
              class="sc-guDLRT eecEpw"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-guDLRT hQNVfw"
        >
          <div
            class="sc-guDLRT bmroYu"
          >
            <span
              class="sc-eDLJxc fNXNMv"
            >
              An action was triggered
            </span>
          </div>
          <div
            class="sc-guDLRT eecEpw"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Snackbar Long Text 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-guDLRT hQNVfw"
          >
            <div
              class="sc-guDLRT jgCiOw"
            />
            <div
              class="sc-guDLRT bmroYu"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit.
              </span>
            </div>
            <div
              class="sc-guDLRT eecEpw"
            >
              <button
                class="sc-iBdmCd dwTRzo"
                shape="rect"
              >
                <span
                  class="sc-jTQDnj kjfTS"
                >
                  <div
                    class="sc-guDLRT egDJIw"
                  >
                    View
                  </div>
                </span>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-guDLRT hQNVfw"
        >
          <div
            class="sc-guDLRT jgCiOw"
          />
          <div
            class="sc-guDLRT bmroYu"
          >
            <span
              class="sc-eDLJxc fNXNMv"
            >
              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit.
            </span>
          </div>
          <div
            class="sc-guDLRT eecEpw"
          >
            <button
              class="sc-iBdmCd dwTRzo"
              shape="rect"
            >
              <span
                class="sc-jTQDnj kjfTS"
              >
                <div
                  class="sc-guDLRT egDJIw"
                >
                  View
                </div>
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Snackbar Popin Bottom 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-guDLRT hTdDkw"
          >
            <button>
              Toggle show (currently; 
              true
              )
            </button>
          </div>
        </div>
      </div>
    </div>
    <div
      id="portal-container"
    >
      <div
        class="sc-beySbM fLxCXd"
        offset="spacing.md"
      >
        <div
          class="sc-guDLRT hQNVfw"
        >
          <div
            class="sc-guDLRT bmroYu"
          >
            <span
              class="sc-eDLJxc fNXNMv"
            >
              Wasssssssup, something really cool happened
            </span>
          </div>
          <div
            class="sc-guDLRT eecEpw"
          >
            <button
              class="sc-iBdmCd dwTRzo"
              shape="rect"
            >
              <span
                class="sc-jTQDnj kjfTS"
              >
                <div
                  class="sc-guDLRT iPYwtz"
                >
                  Close
                </div>
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-guDLRT hTdDkw"
        >
          <button>
            Toggle show (currently; 
            true
            )
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Snackbar Popin Top 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-guDLRT hTdDkw"
          >
            <button>
              Toggle show (currently; 
              true
              )
            </button>
          </div>
        </div>
      </div>
    </div>
    <div
      id="portal-container"
    >
      <div
        class="sc-beySbM dMjZDQ"
        offset="spacing.md"
      >
        <div
          class="sc-guDLRT hQNVfw"
        >
          <div
            class="sc-guDLRT bmroYu"
          >
            <span
              class="sc-eDLJxc fNXNMv"
            >
              Wasssssssup, something really cool happened
            </span>
          </div>
          <div
            class="sc-guDLRT eecEpw"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-guDLRT hTdDkw"
        >
          <button>
            Toggle show (currently; 
            true
            )
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Snackbar With Buttons 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-guDLRT hQNVfw"
          >
            <div
              class="sc-guDLRT bmroYu"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                An action was triggered
              </span>
            </div>
            <div
              class="sc-guDLRT eecEpw"
            >
              <button
                class="sc-iBdmCd dwTRzo"
                shape="rect"
              >
                <span
                  class="sc-jTQDnj kjfTS"
                >
                  <div
                    class="sc-guDLRT egDJIw"
                  >
                    View
                  </div>
                </span>
              </button>
              <button
                class="sc-iBdmCd dwTRzo"
                shape="rect"
              >
                <span
                  class="sc-jTQDnj kjfTS"
                >
                  <div
                    class="sc-guDLRT jgIPGj"
                  >
                    Dismiss
                  </div>
                </span>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-guDLRT hQNVfw"
        >
          <div
            class="sc-guDLRT bmroYu"
          >
            <span
              class="sc-eDLJxc fNXNMv"
            >
              An action was triggered
            </span>
          </div>
          <div
            class="sc-guDLRT eecEpw"
          >
            <button
              class="sc-iBdmCd dwTRzo"
              shape="rect"
            >
              <span
                class="sc-jTQDnj kjfTS"
              >
                <div
                  class="sc-guDLRT egDJIw"
                >
                  View
                </div>
              </span>
            </button>
            <button
              class="sc-iBdmCd dwTRzo"
              shape="rect"
            >
              <span
                class="sc-jTQDnj kjfTS"
              >
                <div
                  class="sc-guDLRT jgIPGj"
                >
                  Dismiss
                </div>
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Snackbar With Start Adornment 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-guDLRT hQNVfw"
          >
            <div
              class="sc-guDLRT jgCiOw"
            >
              <svg
                aria-hidden="true"
                class="svg-inline--fa fa-star "
                data-icon="star"
                data-prefix="fas"
                focusable="false"
                role="img"
                viewBox="0 0 576 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M316.9 18C311.6 7 300.4 0 288.1 0s-23.4 7-28.8 18L195 150.3 51.4 171.5c-12 1.8-22 10.2-25.7 21.7s-.7 24.2 7.9 32.7L137.8 329 113.2 474.7c-2 12 3 24.2 12.9 31.3s23 8 33.8 2.3l128.3-68.5 128.3 68.5c10.8 5.7 23.9 4.9 33.8-2.3s14.9-19.3 12.9-31.3L438.5 329 542.7 225.9c8.6-8.5 11.7-21.2 7.9-32.7s-13.7-19.9-25.7-21.7L381.2 150.3 316.9 18z"
                  fill="currentColor"
                />
              </svg>
            </div>
            <div
              class="sc-guDLRT bmroYu"
            >
              <span
                class="sc-eDLJxc fNXNMv"
              >
                An action was triggered
              </span>
            </div>
            <div
              class="sc-guDLRT eecEpw"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-guDLRT hQNVfw"
        >
          <div
            class="sc-guDLRT jgCiOw"
          >
            <svg
              aria-hidden="true"
              class="svg-inline--fa fa-star "
              data-icon="star"
              data-prefix="fas"
              focusable="false"
              role="img"
              viewBox="0 0 576 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M316.9 18C311.6 7 300.4 0 288.1 0s-23.4 7-28.8 18L195 150.3 51.4 171.5c-12 1.8-22 10.2-25.7 21.7s-.7 24.2 7.9 32.7L137.8 329 113.2 474.7c-2 12 3 24.2 12.9 31.3s23 8 33.8 2.3l128.3-68.5 128.3 68.5c10.8 5.7 23.9 4.9 33.8-2.3s14.9-19.3 12.9-31.3L438.5 329 542.7 225.9c8.6-8.5 11.7-21.2 7.9-32.7s-13.7-19.9-25.7-21.7L381.2 150.3 316.9 18z"
                fill="currentColor"
              />
            </svg>
          </div>
          <div
            class="sc-guDLRT bmroYu"
          >
            <span
              class="sc-eDLJxc fNXNMv"
            >
              An action was triggered
            </span>
          </div>
          <div
            class="sc-guDLRT eecEpw"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Stepper Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-cCzKKE DFnDL"
          >
            <div
              class="sc-cbCZAZ iHvzXP"
            >
              <div
                class="sc-ckdFjP NSnop"
              />
              <div
                class="sc-iVhdPM cXDLH"
              >
                <label
                  class="sc-jTQDnj bJeBfC"
                  color="core.border.borderFocus"
                >
                  Step 1
                </label>
                <span
                  class="sc-eDLJxc bzAIIw"
                  color="primary.neutral.900"
                >
                  Step 1 description
                </span>
              </div>
            </div>
            <div
              class="sc-jdHJyC bGSMLa"
            />
            <div
              class="sc-cbCZAZ iHvzXP"
            >
              <div
                class="sc-ckdFjP frbdmf"
              />
              <div
                class="sc-iVhdPM cXDLH"
              >
                <label
                  class="sc-jTQDnj bJeBfC"
                  color="core.border.borderFocus"
                >
                  Step 2
                </label>
                <span
                  class="sc-eDLJxc bzAIIw"
                  color="primary.neutral.900"
                >
                  Step 2 description
                </span>
              </div>
            </div>
            <div
              class="sc-jdHJyC lkOBDt"
            />
            <div
              class="sc-cbCZAZ iHvzXP"
            >
              <div
                class="sc-ckdFjP hnqyux"
                disabled=""
              />
              <div
                class="sc-iVhdPM cXDLH"
              >
                <label
                  class="sc-jTQDnj kGkUYN"
                  color="primary.neutral.500"
                >
                  Step 3
                </label>
                <span
                  class="sc-eDLJxc gNDJhZ"
                  color="primary.neutral.600"
                >
                  Step 3 description
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-cCzKKE DFnDL"
        >
          <div
            class="sc-cbCZAZ iHvzXP"
          >
            <div
              class="sc-ckdFjP NSnop"
            />
            <div
              class="sc-iVhdPM cXDLH"
            >
              <label
                class="sc-jTQDnj bJeBfC"
                color="core.border.borderFocus"
              >
                Step 1
              </label>
              <span
                class="sc-eDLJxc bzAIIw"
                color="primary.neutral.900"
              >
                Step 1 description
              </span>
            </div>
          </div>
          <div
            class="sc-jdHJyC bGSMLa"
          />
          <div
            class="sc-cbCZAZ iHvzXP"
          >
            <div
              class="sc-ckdFjP frbdmf"
            />
            <div
              class="sc-iVhdPM cXDLH"
            >
              <label
                class="sc-jTQDnj bJeBfC"
                color="core.border.borderFocus"
              >
                Step 2
              </label>
              <span
                class="sc-eDLJxc bzAIIw"
                color="primary.neutral.900"
              >
                Step 2 description
              </span>
            </div>
          </div>
          <div
            class="sc-jdHJyC lkOBDt"
          />
          <div
            class="sc-cbCZAZ iHvzXP"
          >
            <div
              class="sc-ckdFjP hnqyux"
              disabled=""
            />
            <div
              class="sc-iVhdPM cXDLH"
            >
              <label
                class="sc-jTQDnj kGkUYN"
                color="primary.neutral.500"
              >
                Step 3
              </label>
              <span
                class="sc-eDLJxc gNDJhZ"
                color="primary.neutral.600"
              >
                Step 3 description
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/TextArea End Adornment 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-ifyqMZ hirJzb"
          >
            <div
              class="sc-fHekdT logKgy"
            >
              <textarea
                class="sc-blmETK eZGyIM"
                placeholder="Search"
              />
              <span
                class="sc-fmKESZ iaXrmw"
              >
                <svg
                  aria-hidden="true"
                  class="svg-inline--fa fa-magnifying-glass "
                  data-icon="magnifying-glass"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style="opacity: 0.4;"
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
                    fill="currentColor"
                  />
                </svg>
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-ifyqMZ hirJzb"
        >
          <div
            class="sc-fHekdT logKgy"
          >
            <textarea
              class="sc-blmETK eZGyIM"
              placeholder="Search"
            />
            <span
              class="sc-fmKESZ iaXrmw"
            >
              <svg
                aria-hidden="true"
                class="svg-inline--fa fa-magnifying-glass "
                data-icon="magnifying-glass"
                data-prefix="fas"
                focusable="false"
                role="img"
                style="opacity: 0.4;"
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
                  fill="currentColor"
                />
              </svg>
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/TextArea Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-ifyqMZ hirJzb"
          >
            <div
              class="sc-fHekdT logKgy"
            >
              <textarea
                class="sc-blmETK bHyfTM"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-ifyqMZ hirJzb"
        >
          <div
            class="sc-fHekdT logKgy"
          >
            <textarea
              class="sc-blmETK bHyfTM"
            />
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/TextArea Resize 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div
            class="sc-ifyqMZ hirJzb"
          >
            <div
              class="sc-fHekdT logKgy"
            >
              <span
                class="sc-fmKESZ cZcatr"
              >
                <svg
                  aria-hidden="true"
                  class="svg-inline--fa fa-magnifying-glass "
                  data-icon="magnifying-glass"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style="opacity: 0.4;"
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
                    fill="currentColor"
                  />
                </svg>
              </span>
              <textarea
                class="sc-blmETK SSKdV"
                placeholder="Search"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div
          class="sc-ifyqMZ hirJzb"
        >
          <div
            class="sc-fHekdT logKgy"
          >
            <span
              class="sc-fmKESZ cZcatr"
            >
              <svg
                aria-hidden="true"
                class="svg-inline--fa fa-magnifying-glass "
                data-icon="magnifying-glass"
                data-prefix="fas"
                focusable="false"
                role="img"
                style="opacity: 0.4;"
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
                  fill="currentColor"
                />
              </svg>
            </span>
            <textarea
              class="sc-blmETK SSKdV"
              placeholder="Search"
            />
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Typography Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <span
            class="sc-eDLJxc OHOZw"
          >
            Abcdefg
          </span>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <span
          class="sc-eDLJxc OHOZw"
        >
          Abcdefg
        </span>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Utils/ClickAwayListener Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <span>
            <button
              class="sc-iBdmCd dcbVBG"
              shape="rect"
            >
              <span
                class="sc-jTQDnj kjfTS"
              >
                Toggle popper
              </span>
            </button>
          </span>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <span>
          <button
            class="sc-iBdmCd dcbVBG"
            shape="rect"
          >
            <span
              class="sc-jTQDnj kjfTS"
            >
              Toggle popper
            </span>
          </button>
        </span>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Utils/Popover Placement Default 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div>
            <button
              class="sc-iBdmCd dkzvOQ"
              shape="rect"
            >
              <span
                class="sc-jTQDnj kjfTS"
              >
                Toggle popper
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div>
          <button
            class="sc-iBdmCd dkzvOQ"
            shape="rect"
          >
            <span
              class="sc-jTQDnj kjfTS"
            >
              Toggle popper
            </span>
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Utils/Popover Placement Right 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <div>
            <button
              class="sc-iBdmCd dkzvOQ"
              shape="rect"
            >
              <span
                class="sc-jTQDnj kjfTS"
              >
                Toggle popper
              </span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <div>
          <button
            class="sc-iBdmCd dkzvOQ"
            shape="rect"
          >
            <span
              class="sc-jTQDnj kjfTS"
            >
              Toggle popper
            </span>
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Utils/Portal Example 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div>
        <div>
          <button
            class="sc-iBdmCd dkzvOQ"
            shape="rect"
          >
            <span
              class="sc-jTQDnj kjfTS"
            >
              Mount children
            </span>
          </button>
          <div
            style="border: 1px solid gray; border-radius: 2px; margin: 10px 0px; padding: 5px;"
          >
            It looks like I will render here.
          </div>
          <div
            style="border: 1px solid gray; border-radius: 2px; margin: 10px 0px; padding: 5px;"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <button
          class="sc-iBdmCd dkzvOQ"
          shape="rect"
        >
          <span
            class="sc-jTQDnj kjfTS"
          >
            Mount children
          </span>
        </button>
        <div
          style="border: 1px solid gray; border-radius: 2px; margin: 10px 0px; padding: 5px;"
        >
          It looks like I will render here.
        </div>
        <div
          style="border: 1px solid gray; border-radius: 2px; margin: 10px 0px; padding: 5px;"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
