import { Meta } from '@storybook/addon-docs';

<Meta title="Components/{{name}}/Introduction" />

# Creating stories of your own

We have a standardized way now of creating stories! It is encouraged that we follow proper documentation and be as informative as we can when creating our stories. 

1. #### Create a component named ```{{name}}.stories.tsx``` under you component folder.

2. #### Add the necessary imports for your story
```jsx
// Some necessary imports
import React from "react";
import {ComponentStory, ComponentMeta} from "@storybook/react";
import {withDesign} from "storybook-addon-designs";
import componentSummary from './ComponentSummary';
// Your component
import {{name}} from "./{{name}}";
// Other imports. In this case, we need to import the icons
```

3. #### Add a component meta. This will include a ```title, component, decorators, and summary```. Here is an example:
More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
```jsx
export default {
  title: "Components/{{name}}",
  component: {{name}},
  decorators: [withDesign],
  parameters: {
    docs: {
      description: {
        component: componentSummary,
      },
    },
  },
} as ComponentMeta<typeof {{name}}>;
```

4. #### For better documentation, we should put the ```argTypes``` which include properties and their attributes in the component meta as well. Ideally, for each property, it would have a ```description, type, control, and defaultValue```. 
  - ```description``` is a short message on what the property is about. 
  - ```type``` is the property's data type. 
  - ```control``` is the type of control it will show as in the storybook documentation. 
  - ```defaultValue``` is the value which will be intially loaded in the docs. 

Below is an example of it:
```jsx
export default {
  title: "Components/{{name}}",
  component: {{name}},
  decorators: [withDesign],
  parameters: {
    docs: {
      description: {
        component: componentSummary,
      },
    },
  },
  argTypes: {
    children: {
      type: "string",
      control: "text",
      defaultValue: "Testing this component",
      description: "Children of the component",
    },
  },
} as ComponentMeta<typeof {{name}}>;
``` 

5. #### Next, add a template to be used for your stories:
More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args
```jsx
const Template: ComponentStory<typeof {{name}}> = (args: any) => (
  <{{name}} {...args} />
);
```

6. #### Then, bind the template and create your first story
More on args: https://storybook.js.org/docs/react/writing-stories/args
```jsx
export const Example = Template.bind({});
Example.args = {
  children: "Testing this component"
};
```

7. #### Create other stories as you see fit!

### Your story should look something like this:
```jsx
import React from "react";
import {ComponentStory, ComponentMeta} from "@storybook/react";
import componentSummary from './ComponentSummary';
import {{name}} from "./{{name}}";
import {withDesign} from "storybook-addon-designs";

export default {
  title: "Components/{{name}}",
  component: {{name}},
  decorators: [withDesign],
  parameters: {
    docs: {
      description: {
        component: componentSummary,
      },
    },
  },
  argTypes: {
    children: {
      type: "string",
      control: "text",
      defaultValue: "Testing this component",
      description: "Children of the component",
    },
  },
} as ComponentMeta<typeof {{name}}>;

const Template: ComponentStory<typeof {{name}}> = (args: any) => (
  <{{name}} {...args} />
);

export const Example = Template.bind({});
Example.args = {
  children: "Testing this component"
};
```